<Project Sdk="Microsoft.NET.Sdk">

	<Import Project="..\firely-net-sdk.props" />

	<PropertyGroup>
		<PackageId>Hl7.Fhir.Base</PackageId>
		<AssemblyName>Hl7.Fhir.Base</AssemblyName>
		<Title>Firely's HL7 FHIR SDK Base Class Library</Title>
		<Description>Firely's HL7 FHIR SDK Base Class Library. Is a dependency for the FHIR release-specific NuGet packages and is usually not directly referenced.</Description>
		<PackageTags>HL7;FHIR;Firely;SDK;BCL</PackageTags>
	   <BeforePack>$(BeforePack);IncludeAnalyzersInPackage;</BeforePack>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0'">
		<PackageReference Include="System.Buffers" Version="4.5.1" />
		<PackageReference Include="System.Text.Json" Version="8.0.3" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Fhir.Metrics" Version="1.3.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0" />
		<PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="Serialization\xhtml\fhir-xhtml.xsd" LogicalName="fhir-xhtml.xsd">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>
		<EmbeddedResource Include="Serialization\xhtml\xml.xsd" LogicalName="xml.xsd">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>
		<EmbeddedResource Include="Serialization\xhtml\xmldsig-core-schema.xsd" LogicalName="xmldsig-core-schema.xsd">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Hl7.Fhir.Model.SourceGeneration\Hl7.Fhir.Model.SourceGeneration.csproj" ReferenceOutputAssembly="false" OutputItemType="Analyzer" PackAsAnalyzer="true" />
	</ItemGroup>

   <Target Name="IncludeAnalyzersInPackage"
		   Condition="'@(ProjectReference)' != '' and @(ProjectReference->AnyHaveMetadataValue('PackAsAnalyzer', 'true'))">
	  <MSBuild Projects="@(ProjectReference->WithMetadataValue('PackAsAnalyzer', 'true'))"
			   Targets="GetAnalyzerPackFiles"
			   RemoveProperties="SetTargetFramework">
		 <Output TaskParameter="TargetOutputs" ItemName="_AnalyzerFile" />
	  </MSBuild>

	  <ItemGroup>
		 <Content Include="@(_AnalyzerFile)" Pack="True" Condition="!%(_AnalyzerFile.IsSymbol)" />
		 <!-- Symbols don't honor PackagePath.  By default they are placed in lib/%(TargetFramework).
           Pack does honor TargetPath and does Path.Combine("lib/%(TargetFramework)", "%(TargetPath)"),
           so a rooted path value for TargetPath will override lib.
           https://github.com/NuGet/Home/issues/10860 -->
		 <_TargetPathsToSymbols Include="@(_AnalyzerFile)" TargetPath="/%(_AnalyzerFile.PackagePath)" Condition="%(_AnalyzerFile.IsSymbol)" />
	  </ItemGroup>
   </Target>

   <Target Name="GetAnalyzerPackFiles"
		   DependsOnTargets="$(GenerateNuspecDependsOn)"
		   Returns="@(_AnalyzerPackFile)">
	  <PropertyGroup>
		 <_analyzerPath>analyzers/dotnet/cs</_analyzerPath>
		 <_analyzerPath Condition="'$(AnalyzerRoslynVersion)' != ''">$(_analyzerPath)/roslyn$(AnalyzerRoslynVersion)</_analyzerPath>
		 <_analyzerPath Condition="'$(AnalyzerLanguage)' != ''">$(_analyzerPath)/$(AnalyzerLanguage)</_analyzerPath>
	  </PropertyGroup>

	  <!-- Filter on netstandard2.0 so that generator projects can multi-target for the purpose of enabling nullable reference type compiler checks. -->
	  <ItemGroup>
		 <_AnalyzerPackFile Include="@(_BuildOutputInPackage->WithMetadataValue('TargetFramework', 'netstandard2.0'))" IsSymbol="false" />
		 <_AnalyzerPackFile Include="@(_TargetPathsToSymbols->WithMetadataValue('TargetFramework', 'netstandard2.0'))" IsSymbol="true" />
		 <_AnalyzerPackFile PackagePath="$(_analyzerPath)/%(TargetPath)" />
	  </ItemGroup>

	  <Error Text="Analyzers must target netstandard2.0 since they run in the compiler which targets netstandard2.0. $(MSBuildProjectFullPath) targets '$([MSBuild]::ValueOrDefault('$(TargetFrameworks)', '$(TargetFramework)'))' instead."
			 Condition="'@(_AnalyzerPackFile)' == ''" />
   </Target>
</Project>